// Generated from MinhaGramatica.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class MinhaGramaticaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ID=1, NUM=2, NUMREAL=3, CAD=4, COND=5, REP=6, ATR=7, OPAR=8, OPRL=9, LER=10, 
		ESCREVER=11, OPLOG=12, AP=13, FP=14, AC=15, FC=16, DLOP=17, WS=18, ErrorChar=19;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ID", "NUM", "NUMREAL", "CAD", "COND", "REP", "ATR", "OPAR", "OPRL", 
			"LER", "ESCREVER", "OPLOG", "AP", "FP", "AC", "FC", "DLOP", "LETRA", 
			"DIGITO", "WS", "ErrorChar"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, "'='", null, null, "'leiaIsso'", 
			"'escrevaIsso'", null, "'('", "')'", "'{'", "'}'", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ID", "NUM", "NUMREAL", "CAD", "COND", "REP", "ATR", "OPAR", "OPRL", 
			"LER", "ESCREVER", "OPLOG", "AP", "FP", "AC", "FC", "DLOP", "WS", "ErrorChar"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MinhaGramaticaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MinhaGramatica.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0013\u00b1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0005\u0000.\b\u0000\n\u0000\f\u00001\t\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0004\u00026\b\u0002\u000b\u0002"+
		"\f\u00027\u0001\u0002\u0001\u0002\u0004\u0002<\b\u0002\u000b\u0002\f\u0002"+
		"=\u0001\u0003\u0001\u0003\u0001\u0003\u0005\u0003C\b\u0003\n\u0003\f\u0003"+
		"F\t\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0003\u0004T\b\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0003\u0005k\b\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0003\b{\b\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0003\u000b\u0098\b\u000b"+
		"\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0005\u0013\u00a9\b\u0013\n\u0013\f\u0013\u00ac\t\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0000\u0000\u0015\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0000%\u0000\'\u0012)\u0013\u0001\u0000\u0006"+
		"\u0001\u0000az\u0003\u000009AZaz\u0004\u0000%%*+--//\u0002\u0000AZaz\u0001"+
		"\u000009\u0003\u0000\t\n\r\r  \u00bd\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0001+\u0001\u0000\u0000"+
		"\u0000\u00032\u0001\u0000\u0000\u0000\u00055\u0001\u0000\u0000\u0000\u0007"+
		"?\u0001\u0000\u0000\u0000\tS\u0001\u0000\u0000\u0000\u000bj\u0001\u0000"+
		"\u0000\u0000\rl\u0001\u0000\u0000\u0000\u000fn\u0001\u0000\u0000\u0000"+
		"\u0011z\u0001\u0000\u0000\u0000\u0013|\u0001\u0000\u0000\u0000\u0015\u0085"+
		"\u0001\u0000\u0000\u0000\u0017\u0097\u0001\u0000\u0000\u0000\u0019\u0099"+
		"\u0001\u0000\u0000\u0000\u001b\u009b\u0001\u0000\u0000\u0000\u001d\u009d"+
		"\u0001\u0000\u0000\u0000\u001f\u009f\u0001\u0000\u0000\u0000!\u00a1\u0001"+
		"\u0000\u0000\u0000#\u00a3\u0001\u0000\u0000\u0000%\u00a5\u0001\u0000\u0000"+
		"\u0000\'\u00aa\u0001\u0000\u0000\u0000)\u00af\u0001\u0000\u0000\u0000"+
		"+/\u0007\u0000\u0000\u0000,.\u0007\u0001\u0000\u0000-,\u0001\u0000\u0000"+
		"\u0000.1\u0001\u0000\u0000\u0000/-\u0001\u0000\u0000\u0000/0\u0001\u0000"+
		"\u0000\u00000\u0002\u0001\u0000\u0000\u00001/\u0001\u0000\u0000\u0000"+
		"23\u0003%\u0012\u00003\u0004\u0001\u0000\u0000\u000046\u0003%\u0012\u0000"+
		"54\u0001\u0000\u0000\u000067\u0001\u0000\u0000\u000075\u0001\u0000\u0000"+
		"\u000078\u0001\u0000\u0000\u000089\u0001\u0000\u0000\u00009;\u0005.\u0000"+
		"\u0000:<\u0003%\u0012\u0000;:\u0001\u0000\u0000\u0000<=\u0001\u0000\u0000"+
		"\u0000=;\u0001\u0000\u0000\u0000=>\u0001\u0000\u0000\u0000>\u0006\u0001"+
		"\u0000\u0000\u0000?D\u0005\"\u0000\u0000@C\u0003%\u0012\u0000AC\u0003"+
		"#\u0011\u0000B@\u0001\u0000\u0000\u0000BA\u0001\u0000\u0000\u0000CF\u0001"+
		"\u0000\u0000\u0000DB\u0001\u0000\u0000\u0000DE\u0001\u0000\u0000\u0000"+
		"EG\u0001\u0000\u0000\u0000FD\u0001\u0000\u0000\u0000GH\u0005\"\u0000\u0000"+
		"H\b\u0001\u0000\u0000\u0000IJ\u0005s\u0000\u0000JK\u0005e\u0000\u0000"+
		"KL\u0005F\u0000\u0000LM\u0005a\u0000\u0000MT\u0005z\u0000\u0000NO\u0005"+
		"s\u0000\u0000OP\u0005e\u0000\u0000PQ\u0005N\u0000\u0000QR\u0005a\u0000"+
		"\u0000RT\u0005o\u0000\u0000SI\u0001\u0000\u0000\u0000SN\u0001\u0000\u0000"+
		"\u0000T\n\u0001\u0000\u0000\u0000UV\u0005r\u0000\u0000VW\u0005e\u0000"+
		"\u0000WX\u0005p\u0000\u0000XY\u0005e\u0000\u0000YZ\u0005t\u0000\u0000"+
		"Z[\u0005e\u0000\u0000[\\\u0005A\u0000\u0000\\]\u0005t\u0000\u0000]k\u0005"+
		"e\u0000\u0000^_\u0005p\u0000\u0000_`\u0005e\u0000\u0000`a\u0005r\u0000"+
		"\u0000ab\u0005c\u0000\u0000bc\u0005o\u0000\u0000cd\u0005r\u0000\u0000"+
		"de\u0005r\u0000\u0000ef\u0005e\u0000\u0000fg\u0005T\u0000\u0000gh\u0005"+
		"u\u0000\u0000hi\u0005d\u0000\u0000ik\u0005o\u0000\u0000jU\u0001\u0000"+
		"\u0000\u0000j^\u0001\u0000\u0000\u0000k\f\u0001\u0000\u0000\u0000lm\u0005"+
		"=\u0000\u0000m\u000e\u0001\u0000\u0000\u0000no\u0007\u0002\u0000\u0000"+
		"o\u0010\u0001\u0000\u0000\u0000pq\u0005=\u0000\u0000q{\u0005=\u0000\u0000"+
		"rs\u0005!\u0000\u0000s{\u0005=\u0000\u0000t{\u0005<\u0000\u0000uv\u0005"+
		"<\u0000\u0000v{\u0005=\u0000\u0000w{\u0005>\u0000\u0000xy\u0005>\u0000"+
		"\u0000y{\u0005=\u0000\u0000zp\u0001\u0000\u0000\u0000zr\u0001\u0000\u0000"+
		"\u0000zt\u0001\u0000\u0000\u0000zu\u0001\u0000\u0000\u0000zw\u0001\u0000"+
		"\u0000\u0000zx\u0001\u0000\u0000\u0000{\u0012\u0001\u0000\u0000\u0000"+
		"|}\u0005l\u0000\u0000}~\u0005e\u0000\u0000~\u007f\u0005i\u0000\u0000\u007f"+
		"\u0080\u0005a\u0000\u0000\u0080\u0081\u0005I\u0000\u0000\u0081\u0082\u0005"+
		"s\u0000\u0000\u0082\u0083\u0005s\u0000\u0000\u0083\u0084\u0005o\u0000"+
		"\u0000\u0084\u0014\u0001\u0000\u0000\u0000\u0085\u0086\u0005e\u0000\u0000"+
		"\u0086\u0087\u0005s\u0000\u0000\u0087\u0088\u0005c\u0000\u0000\u0088\u0089"+
		"\u0005r\u0000\u0000\u0089\u008a\u0005e\u0000\u0000\u008a\u008b\u0005v"+
		"\u0000\u0000\u008b\u008c\u0005a\u0000\u0000\u008c\u008d\u0005I\u0000\u0000"+
		"\u008d\u008e\u0005s\u0000\u0000\u008e\u008f\u0005s\u0000\u0000\u008f\u0090"+
		"\u0005o\u0000\u0000\u0090\u0016\u0001\u0000\u0000\u0000\u0091\u0098\u0005"+
		"e\u0000\u0000\u0092\u0093\u0005o\u0000\u0000\u0093\u0098\u0005u\u0000"+
		"\u0000\u0094\u0095\u0005n\u0000\u0000\u0095\u0096\u0005\u00e3\u0000\u0000"+
		"\u0096\u0098\u0005o\u0000\u0000\u0097\u0091\u0001\u0000\u0000\u0000\u0097"+
		"\u0092\u0001\u0000\u0000\u0000\u0097\u0094\u0001\u0000\u0000\u0000\u0098"+
		"\u0018\u0001\u0000\u0000\u0000\u0099\u009a\u0005(\u0000\u0000\u009a\u001a"+
		"\u0001\u0000\u0000\u0000\u009b\u009c\u0005)\u0000\u0000\u009c\u001c\u0001"+
		"\u0000\u0000\u0000\u009d\u009e\u0005{\u0000\u0000\u009e\u001e\u0001\u0000"+
		"\u0000\u0000\u009f\u00a0\u0005}\u0000\u0000\u00a0 \u0001\u0000\u0000\u0000"+
		"\u00a1\u00a2\u0005;\u0000\u0000\u00a2\"\u0001\u0000\u0000\u0000\u00a3"+
		"\u00a4\u0007\u0003\u0000\u0000\u00a4$\u0001\u0000\u0000\u0000\u00a5\u00a6"+
		"\u0007\u0004\u0000\u0000\u00a6&\u0001\u0000\u0000\u0000\u00a7\u00a9\u0007"+
		"\u0005\u0000\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9\u00ac\u0001"+
		"\u0000\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001"+
		"\u0000\u0000\u0000\u00ab\u00ad\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0006\u0013\u0000\u0000\u00ae(\u0001\u0000"+
		"\u0000\u0000\u00af\u00b0\t\u0000\u0000\u0000\u00b0*\u0001\u0000\u0000"+
		"\u0000\u000b\u0000/7=BDSjz\u0097\u00aa\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}